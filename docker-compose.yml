version: "3.9"

volumes:
  tdengine_data:
  mosquitto_data:
  mosquitto_logs:
  grafana_data:
  keephq_data:

networks:
  app-network:
    driver: bridge

services:
  # TDengine Service
  tdengine:
    image: tdengine/tdengine:3.3.6.9
    user: "root"
    volumes:
      - tdengine_data:/var/lib/taos
      - ./taos.cfg:/etc/taos/taos.cfg
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      TZ: "UTC" # Remplacez par votre fuseau horaire si nécessaire
    ports:
      - "6041:6041"  # RESTful API
      - "6030:6030"  # JDBC/ODBC connections
      - "6020:6020"  # Native protocol
      - "6042:6042"  # WebSocket support
    networks:
      - app-network

  # Mosquitto MQTT Broker
  mqtt-broker:
    image: eclipse-mosquitto:2.0.21
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    ports:
      - "1883:1883"  # MQTT protocol
      - "9001:9001"  # WebSocket for MQTT
    networks:
      - app-network

  # Grafana for visualizing TDengine data
  grafana:
    image: grafana/grafana:12.0.2
    user: "472" # Utilisateur pour permissions de volume
    volumes:
      - grafana_data:/var/lib/grafana
      - ./provisioning:/etc/grafana/provisioning
    environment:
#      - GF_INSTALL_PLUGINS=grafana-mqtt-datasource
      - GF_PLUGINS_PREINSTALL=grafana-mqtt-datasource, tdengine-datasource@@https://www.tdengine.com/assets-download/grafana-plugin/tdengine-datasource.zip
      - GF_SECURITY_ADMIN_USER=admin         # Utilisateur par défaut
      - GF_SECURITY_ADMIN_PASSWORD=admin     # Mot de passe par défaut
      - GF_FEATURE_TOGGLE_LIVE=true          # Activer le mode live pour WebSocket
      - GF_LIVE_ALLOWED_ORIGINS=*            # Autoriser toutes les origines pour Live
      - GF_LIVE_GRPC_PORT=3000               # Port Live pour WebSocket
      - TDENGINE_API=http://tdengine:6041
      - TDENGINE_BASIC_AUTH=cm9vdDp0YW9zZGF0YQ== # #printf "$TDENGINE_USER:$TDENGINE_PASSWORD" | base64
    ports:
      - "3000:3000" # Interface Web de Grafana
    depends_on:
      - tdengine
    networks:
      - app-network

  # KeepHQ Service
  keep-frontend:
    ports:
      - "3100:3000"
    environment:
      - AUTH_TYPE=NO_AUTH
      - API_URL=http://keep-backend:8080
      - NEXTAUTH_SECRET=secret
      - NEXTAUTH_URL=http://localhost:3100
      - NEXT_PUBLIC_API_URL=http://localhost:8090
      - POSTHOG_KEY=phc_muk9qE3TfZsX3SZ9XxX52kCGJBclrjhkP9JxAQcm1PZ
      - POSTHOG_HOST=https://ingest.keephq.dev
      - NEXT_PUBLIC_SENTRY_DSN=https://0d4d59e3105ffe8afa27dcb95a222009@o4505515398922240.ingest.us.sentry.io/4508258058764288
      - PUSHER_HOST=localhost
      - PUSHER_PORT=6001
      - PUSHER_APP_KEY=keepappkey
    image: us-central1-docker.pkg.dev/keephq/keep/keep-ui
    volumes:
      - ./state:/state
    depends_on:
      - keep-backend
    networks:
      - app-network

  keep-backend:
    ports:
      - "8090:8080"
    environment:
      - AUTH_TYPE=NO_AUTH
      - PROMETHEUS_MULTIPROC_DIR=/tmp/prometheus
      - KEEP_METRICS=true
      - PORT=8080
      - SECRET_MANAGER_TYPE=FILE
      - SECRET_MANAGER_DIRECTORY=/state
      - DATABASE_CONNECTION_STRING=sqlite:////state/db.sqlite3?check_same_thread=False
      - OPENAI_API_KEY=$OPENAI_API_KEY
      - PUSHER_APP_ID=1
      - PUSHER_APP_KEY=keepappkey
      - PUSHER_APP_SECRET=keepappsecret
      - PUSHER_HOST=keep-websocket-server
      - PUSHER_PORT=6001
      - USE_NGROK=false
    image: us-central1-docker.pkg.dev/keephq/keep/keep-api
    volumes:
      - ./state:/state
    networks:
      - app-network

  keep-websocket-server:
    image: quay.io/soketi/soketi:1.4-16-debian
    ports:
      - "6001:6001"
      - "9601:9601"
    environment:
      - SOKETI_USER_AUTHENTICATION_TIMEOUT=3000
      - SOKETI_DEBUG=1
      - SOKETI_DEFAULT_APP_ID=1
      - SOKETI_DEFAULT_APP_KEY=keepappkey
      - SOKETI_DEFAULT_APP_SECRET=keepappsecret
    networks:
      - app-network

  generator-to-mqtt:
    image: eclipse-mosquitto:2.0.21
    command: >
      sh -c "
        apk add --no-cache python3 py3-pip && \
        python3 -m venv /usr/src/env && \
        . /usr/src/env/bin/activate && \
        pip install paho-mqtt==2.1.0 && \
        python /usr/src/generator_to_mqtt.py
      "
    volumes:
      - ./generator-to-mqtt/generator_to_mqtt.py:/usr/src/generator_to_mqtt.py
    environment:
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
      - MQTT_TOPIC=sensor/data
    networks:
      - app-network
    depends_on:
      - mqtt-broker

  mqtt-to-tdengine:
    image: eclipse-mosquitto:2.0.21
    command: >
      sh -c "
        apk add --no-cache python3 py3-pip && \
        python3 -m venv /usr/src/env && \
        . /usr/src/env/bin/activate && \
        pip install paho-mqtt==2.1.0 taospy==2.8.1 && \
        python /usr/src/mqtt_to_tdengine.py
      "
    volumes:
      - ./mqtt-to-tdengine/mqtt_to_tdengine.py:/usr/src/mqtt_to_tdengine.py
    environment:
      - MQTT_BROKER=mqtt-broker
      - MQTT_PORT=1883
      - MQTT_TOPIC=sensor/data
      - TDENGINE_HOST=http://tdengine:6041
      - TDENGINE_USER=root
      - TDENGINE_PASSWORD=taosdata
      - TDENGINE_DB=sensors
      - TDENGINE_TABLE=readings
    networks:
      - app-network
    depends_on:
      - mqtt-broker
      - tdengine

  tdengine-to-keephq:
    build:
      context: .
      dockerfile: tdengine-to-keephq.Dockerfile
    environment:
      - TDENGINE_IP=tdengine
      - TDENGINE_PORT=6030
      - TDENGINE_USER=root
      - TDENGINE_PASSWORD=taosdata
      - TDENGINE_DB=sensors
      - TDENGINE_TOPIC=high_temperature_topic
      - KEEPHQ_WEBHOOK_URL=http://keep-backend:8080/api/v1/YOUR_WEBHOOK_ENDPOINT
      - LD_LIBRARY_PATH=/usr/lib:/usr/local/lib
    networks:
      - app-network
    depends_on:
      - mqtt-broker
      - tdengine
